{"is_source_file": true, "format": "TypeScript", "description": "This file implements a WebSocket client for real-time messaging. It manages WebSocket connections, handles incoming messages, maintains heartbeat pings, supports mock fallback for development, and provides methods for subscribing/unsubscribing to socket events and sending messages.", "external_files": ["$lib/types"], "external_methods": [], "published": ["Unsubscribe", "connectSocket", "onEvent", "sendRealtimeMessage"], "classes": [], "methods": [{"name": "function getWsBase(): string | null { getWsBase", "description": "Retrieves the WebSocket base URL from environment variables.", "scope": "", "scopeKind": ""}, {"name": "export function connectSocket() { connectSocket", "description": "Establishes a WebSocket connection or activates mock mode if URL is not configured.", "scope": "", "scopeKind": ""}, {"name": "export function onEvent(cb: Listener): Unsubscribe { onEvent", "description": "Subscribes to WebSocket events, returning an unsubscribe function.", "scope": "", "scopeKind": ""}, {"name": "export function sendRealtimeMessage(msg: Message) { sendRealtimeMessage", "description": "Sends a message over WebSocket to the server.", "scope": "", "scopeKind": ""}, {"name": "function emit(evt: SocketEvent) { emit", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function startMockLoop() { startMockLoop", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["window.setInterval", "clearInterval", "setTimeout", "JSON.parse", "JSON.stringify"], "search-terms": ["WebSocket client", "realtime messaging", "mock fallback", "subscribe/unsubscribe", "heartbeat", "environment-configurable URL"], "state": 2, "file_id": 21, "knowledge_revision": 49, "git_revision": "", "revision_history": [{"46": ""}, {"49": ""}], "ctags": [{"_type": "tag", "name": "Listener", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^type Listener = (evt: SocketEvent) => void;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Unsubscribe", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^export type Unsubscribe = () => void;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "_reconnectHandle", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^    const _reconnectHandle = setTimeout(connectSocket, 2000);$/", "language": "TypeScript", "kind": "constant", "scope": "connectSocket", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^  const base = getWsBase();$/", "language": "TypeScript", "kind": "constant", "scope": "connectSocket", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^  const base = getWsBase();$/", "language": "TypeScript", "kind": "constant", "scope": "sendRealtimeMessage", "scopeKind": "function"}, {"_type": "tag", "name": "connectSocket", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^export function connectSocket() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "emit", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^function emit(evt: SocketEvent) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "env", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^  const env = (import.meta as unknown as { env?: Record<string, string | undefined> }).env;$/", "language": "TypeScript", "kind": "constant", "scope": "getWsBase", "scopeKind": "function"}, {"_type": "tag", "name": "getWsBase", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^function getWsBase(): string | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "heartbeatInterval", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^let heartbeatInterval: number | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "listeners", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^const listeners: Set<Listener> = new Set();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "m", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^      const m: Message = {$/", "language": "TypeScript", "kind": "constant", "scope": "startMockLoop", "scopeKind": "function"}, {"_type": "tag", "name": "mockTicker", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^let mockTicker: number | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^      const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "startMockLoop", "scopeKind": "function"}, {"_type": "tag", "name": "onEvent", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^export function onEvent(cb: Listener): Unsubscribe {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^      const parsed = JSON.parse(ev.data) as SocketEvent;$/", "language": "TypeScript", "kind": "constant", "scope": "connectSocket", "scopeKind": "function"}, {"_type": "tag", "name": "sendRealtimeMessage", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^export function sendRealtimeMessage(msg: Message) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "socket", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^let socket: WebSocket | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "startMockLoop", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^function startMockLoop() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/real-time-messaging-platform-22513-22522/chatting_app_frontend/src/lib/realtime/socket.ts", "pattern": "/^  const url = env?.VITE_WS_URL;$/", "language": "TypeScript", "kind": "constant", "scope": "getWsBase", "scopeKind": "function"}], "hash": "f704a759ce4a2ad37676263c66ef649b", "format-version": 4, "code-base-name": "chatting_app_frontend", "filename": "chatting_app_frontend/src/lib/realtime/socket.ts", "fields": [{"name": "let heartbeatInterval: number | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let mockTicker: number | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let socket: WebSocket | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}]}